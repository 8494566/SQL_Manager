
// MFCAppManagerDlg.cpp : 实现文件
//
#include "stdafx.h"
#include "MFCAppManager.h"
#include "MFCAppManagerDlg.h"
#include "afxdialogex.h"
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <string>
#include <vector>
#include <string>
#include <windows.h>
#include <wincon.h>
#include <stdio.h>
#include <time.h>
#include <Nb30.h>
#include <cstdlib>
#include <iostream>
#include "Message.h"
#pragma comment(lib,"netapi32.lib") 



#ifdef _DEBUG
#define new DEBUG_NEW
#endif
//转化唯一标识

using namespace std;

bool read_reg_sz()//读取操作表,其类型为REG_SZ
{
	HKEY hkey;
	LPCTSTR data_set = "Software\\Isremember";
	bool ret = false;
	if (ERROR_SUCCESS == ::RegOpenKeyEx(HKEY_CURRENT_USER, data_set, 0, KEY_READ, &hkey))
	{
		char dwValue[256];
		DWORD dwSzType = REG_SZ;
		DWORD dwSize = sizeof(dwValue);
		if (::RegQueryValueEx(hkey, "remember", 0, &dwSzType, (LPBYTE)&dwValue, &dwSize) != ERROR_SUCCESS)
		{
			return false;//错误
		}
		if (strcmp(dwValue, "true") == 0)
			ret = true;
		
	}
	::RegCloseKey(hkey);
	return ret;
}


void write_reg_sz()
{
	HKEY hkey;
	HKEY hTempKey;
	char m_name_set[256] = "true";

	DWORD len = (DWORD)strlen(m_name_set) + 1;
	LPCTSTR data_set = "Software\\";
	if (ERROR_SUCCESS == ::RegOpenKeyEx(HKEY_CURRENT_USER, data_set, 0, KEY_SET_VALUE, &hkey))
	{
		if (ERROR_SUCCESS == ::RegCreateKey(hkey, "Isremember", &hTempKey))
		{
			if (ERROR_SUCCESS != ::RegSetValueEx(hTempKey, "remember", 0, REG_SZ, (const BYTE*)m_name_set, len))
			{
				return;//错误
			}
		}
	}
	::RegCloseKey(hkey);
}


void delete_value()
{
	HKEY hkey;
	LPCTSTR data_set = "Software\\Isremember";

	if (ERROR_SUCCESS == ::RegOpenKeyEx(HKEY_CURRENT_USER, data_set, 0, KEY_SET_VALUE, &hkey))
	{
		if (ERROR_SUCCESS != ::RegDeleteValue(hkey, "remember"))
		{
			return;//错误
		}
	}
	::RegCloseKey(hkey);
}

void delete_key()
{
	HKEY hkey;
	LPCTSTR data_set = "Software";

	if (ERROR_SUCCESS == ::RegOpenKeyEx(HKEY_CURRENT_USER, data_set, 0, KEY_SET_VALUE, &hkey))
	{
		if (ERROR_SUCCESS != ::RegDeleteKey(hkey, "Isremember"))
		{
			return;//删除错误
		}
	}
	::RegCloseKey(hkey);
}

char Stestring(char str)
{
	CString S_str = "abcdefghijklmnopqrstuvwxyz0123456789";
	CString D_str = "ABCDEFGHIGKLMNOPQRSTUVWXWZABCDEFGHIJ";
	for (int i = 0; i < S_str.GetLength(); i++)
	{
		if (str == S_str[i])
			return D_str[i];
	}
	return str;
}

int G_GetMacAddress(char * mac)
{
	NCB ncb;
	typedef struct _ASTAT_
	{
		ADAPTER_STATUS   adapt;
		NAME_BUFFER   NameBuff[30];
	}ASTAT, *PASTAT;

	ASTAT Adapter;

	typedef struct _LANA_ENUM
	{
		UCHAR   length;
		UCHAR   lana[MAX_LANA];
	}LANA_ENUM;

	LANA_ENUM lana_enum;
	UCHAR uRetCode;
	memset(&ncb, 0, sizeof(ncb));
	memset(&lana_enum, 0, sizeof(lana_enum));
	ncb.ncb_command = NCBENUM;
	ncb.ncb_buffer = (unsigned char *)&lana_enum;
	ncb.ncb_length = sizeof(LANA_ENUM);
	uRetCode = Netbios(&ncb);

	if (uRetCode != NRC_GOODRET)
		return uRetCode;

	for (int lana = 0; lana < lana_enum.length; lana++)
	{
		ncb.ncb_command = NCBRESET;
		ncb.ncb_lana_num = lana_enum.lana[lana];
		uRetCode = Netbios(&ncb);
		if (uRetCode == NRC_GOODRET)
			break;
	}

	if (uRetCode != NRC_GOODRET)
		return uRetCode;

	memset(&ncb, 0, sizeof(ncb));
	ncb.ncb_command = NCBASTAT;
	ncb.ncb_lana_num = lana_enum.lana[0];

	UCHAR   ncb_callname[NCBNAMSZ];

	strcpy_s((char*)ncb.ncb_callname, sizeof(ncb_callname), "*");
	ncb.ncb_buffer = (unsigned char *)&Adapter;
	ncb.ncb_length = sizeof(Adapter);
	uRetCode = Netbios(&ncb);

	if (uRetCode != NRC_GOODRET)
		return uRetCode;

	sprintf_s(mac, 1024, "%02X-%02X-%02X-%02X-%02X-%02X",
		Adapter.adapt.adapter_address[0],
		Adapter.adapt.adapter_address[1],
		Adapter.adapt.adapter_address[2],
		Adapter.adapt.adapter_address[3],
		Adapter.adapt.adapter_address[4],
		Adapter.adapt.adapter_address[5]);

	return 0;
}

UINT64 GetCpuID()
{
#if defined(_WIN64)//64位编译器
	UCHAR shellcode[] =
		"\xB8\x01\x00\x00\x00" //mov eax 1
		"\x0F\xA2"             //cpuid
		"\xC3";                //ret
	PVOID p = NULL;
	//有dep保护机制 所以不能用malloc申请的堆内存中运行执行代码否则会触发异常 
	if (nullptr == (p = VirtualAlloc(NULL, sizeof(shellcode), MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE)))
		fprintf(stderr, "VirtualAlloc Failed!!!");
	if (nullptr == (memcpy(p, shellcode, sizeof(shellcode))))
		fprintf(stderr, "WriteMemory Failed!!!");
	typedef UINT64(*SCFN)(void);
	SCFN code = (SCFN)p;
	//利用函数跳转的特性运行shellcode，shellcode 结尾必须有 ret指令 否则会会运行混乱崩溃。
	UINT64 ret = code();
	VirtualFree(p, sizeof(shellcode), MEM_RELEASE | MEM_COMMIT);
	return ret;
#else
	volatile UINT32 hcpu = 0U;

	__asm
	{
		mov eax, 1
		cpuid
		mov hcpu, eax
	}
	return hcpu;
#endif
}


// CMFCAppManagerDlg 对话框




CMFCAppManagerDlg::CMFCAppManagerDlg(CWnd* pParent /*=NULL*/)
	: CDialogEx(IDD_MFCAPPMANAGER_DIALOG, pParent)
	, m_point(0)
	, m_start(false)
	, m_binding(false)
	, m_camp(FALSE)
	, m_int_camp(2)
	, m_bool_sex(FALSE)
	, m_int_sex(2)
	, m_obj_id(0)
	, m_goodsnum(0)
	, m_is_cpy(false)
	, m_new_objid(0)
	, m_is_start(false)
	, m_user_orcl("sa")
	, m_Catalog("GameDB")
	, m_Area("GameDBArea")
	, m_int_level(0)
	, m_hIcon(AfxGetApp()->LoadIcon(IDI_ICON3))
{
	soleIdInit();
}

void CMFCAppManagerDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
	DDX_Text(pDX, IDC_EDITNAME, m_name);
	DDX_Text(pDX, IDC_EDITPOINT, m_cstring_point);
	DDX_Text(pDX, IDC_STATIC_EXPLEVEL, m_explevel);
	DDV_MaxChars(pDX, m_explevel, 2);
	DDV_MaxChars(pDX, m_name, 128);
	DDV_MaxChars(pDX, m_cstring_point, 9);
	DDX_Text(pDX, IDC_EDITNAME_NEW, m_new_name);
	DDV_MaxChars(pDX, m_new_name, 12);
	DDX_Check(pDX, IDC_CHECK_CAMP, m_camp);
	DDX_Check(pDX, IDC_CHECK_SEX, m_bool_sex);
	DDX_Text(pDX, IDC_EDITPOINT_HOLD, m_string_hold);
	DDV_MaxChars(pDX, m_string_hold, 8);
	DDX_Text(pDX, IDC_EDITPOINTEXP, m_string_exp);
	DDV_MaxChars(pDX, m_string_exp, 10);
	DDX_Text(pDX, IDC_EDIT_IPANDPONT, m_ip_pont);
	DDX_Text(pDX, IDC_EDIT_WOLD, m_world);
	DDX_Text(pDX, IDC_EDITPOINT_ZHUANYI, m_reolid);
	DDX_Text(pDX, IDC_EDITNAME_OBJID, m_str_bojid);
	DDV_MaxChars(pDX, m_str_bojid, 7);
	DDX_Text(pDX, IDC_EDIT_CLAN_NAME, m_clan_name);
	DDX_Text(pDX, IDC_EDITPOINT_USERNAME, m_user_name);
	DDX_Text(pDX, IDC_EDITPOINT_USERWORD, m_user_word);
	DDX_Text(pDX, IDC_EDITPOINT_USERNAME_SET, m_set_user_name);
	DDX_Text(pDX, IDC_EDITPOINT_USERWORDSET, m_set_user_world);
	DDX_Text(pDX, IDC_EDIT_IDIDIDI, m_sole_id);
	DDX_Text(pDX, IDC_EDIT_USER, m_user_orcl);
	DDX_Text(pDX, IDC_EDIT_CATALOG, m_Catalog);
	DDX_Text(pDX, IDC_EDIT_AREA, m_Area);
}

BEGIN_MESSAGE_MAP(CMFCAppManagerDlg, CDialogEx)
	ON_WM_SYSCOMMAND()
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	ON_BN_CLICKED(IDC_BUTTON_CONNECT, &CMFCAppManagerDlg::OnBnClickedButtonConnect)
	ON_EN_CHANGE(IDC_EDITNAME, &CMFCAppManagerDlg::OnEnChangeEditname)
	ON_BN_CLICKED(IDC_BUTTON_YES, &CMFCAppManagerDlg::OnBnClickedButtonYes)
	ON_EN_CHANGE(IDC_EDITPOINT, &CMFCAppManagerDlg::OnEnChangeEditpoint)
	ON_BN_CLICKED(IDC_BUTTON_YES_POINT, &CMFCAppManagerDlg::OnBnClickedButtonYesPoint)
	ON_EN_CHANGE(IDC_STATIC_EXPLEVEL, &CMFCAppManagerDlg::OnEnChangeStaticExplevel)
	ON_BN_CLICKED(IDC_BUTTON_YES_EXPLEVEL, &CMFCAppManagerDlg::OnBnClickedButtonYesExplevel)
	ON_EN_CHANGE(IDC_EDITNAME_NEW, &CMFCAppManagerDlg::OnEnChangeEditnameNew)
	ON_BN_CLICKED(IDC_BUTTON_YES_NEWNAME, &CMFCAppManagerDlg::OnBnClickedButtonYesNewname)
	ON_BN_CLICKED(IDC_BUTTON_DELETE, &CMFCAppManagerDlg::OnBnClickedButtonDelete)
	ON_BN_CLICKED(IDC_CHECK_CAMP, &CMFCAppManagerDlg::OnBnClickedCheckCamp)
	ON_BN_CLICKED(IDC_BUTTON_SETCOMP, &CMFCAppManagerDlg::OnBnClickedButtonSetcomp)
	ON_BN_CLICKED(IDC_CHECK_SEX, &CMFCAppManagerDlg::OnBnClickedCheckSex)
	ON_BN_CLICKED(IDC_BUTTON_SEX, &CMFCAppManagerDlg::OnBnClickedButtonSex)
	ON_BN_CLICKED(IDC_BUTTON_CLANID, &CMFCAppManagerDlg::OnBnClickedButtonClanid)
	ON_BN_CLICKED(IDC_BUTTON_SHOPPING, &CMFCAppManagerDlg::OnBnClickedButtonShopping)
	ON_EN_CHANGE(IDC_EDITPOINT_HOLD, &CMFCAppManagerDlg::OnEnChangeEditpointHold)
	ON_EN_CHANGE(IDC_EDITPOINTEXP, &CMFCAppManagerDlg::OnEnChangeEditpointexp)
	ON_BN_CLICKED(IDC_BUTTON_YES_POINT_HOLD, &CMFCAppManagerDlg::OnBnClickedButtonYesPointHold)
	ON_BN_CLICKED(IDC_BUTTON_HOLD, &CMFCAppManagerDlg::OnBnClickedButtonHold)
	ON_BN_CLICKED(IDC_BUTTON_YES_POINT_EXP, &CMFCAppManagerDlg::OnBnClickedButtonYesPointExp)
	ON_BN_CLICKED(IDC_BUTTON_4_ZS, &CMFCAppManagerDlg::OnBnClickedButton4Zs)
	ON_BN_CLICKED(IDC_BUTTON_4_HY, &CMFCAppManagerDlg::OnBnClickedButton4Hy)
	ON_BN_CLICKED(IDC_BUTTON_4_FS, &CMFCAppManagerDlg::OnBnClickedButton4Fs)
	ON_BN_CLICKED(IDC_BUTTON_5_NOE, &CMFCAppManagerDlg::OnBnClickedButton5Noe)
	ON_BN_CLICKED(IDC_BUTTON_5_TWO, &CMFCAppManagerDlg::OnBnClickedButton5Two)
	ON_BN_CLICKED(IDC_BUTTON_5_CPY, &CMFCAppManagerDlg::OnBnClickedButton5Cpy)
	ON_BN_CLICKED(IDC_BUTTON_5_PAS, &CMFCAppManagerDlg::OnBnClickedButton5Pas)
	ON_EN_CHANGE(IDC_EDIT_IPANDPONT, &CMFCAppManagerDlg::OnEnChangeEditIpandpont)
	ON_EN_CHANGE(IDC_EDIT_WOLD, &CMFCAppManagerDlg::OnEnChangeEditWold)
	ON_EN_CHANGE(IDC_EDITPOINT_ZHUANYI, &CMFCAppManagerDlg::OnEnChangeEditpointZhuanyi)
	ON_BN_CLICKED(IDC_BUTTON_YES_ZHUANYI, &CMFCAppManagerDlg::OnBnClickedButtonYesZhuanyi)
	ON_EN_CHANGE(IDC_EDITNAME_OBJID, &CMFCAppManagerDlg::OnEnChangeEditnameObjid)
	ON_BN_CLICKED(IDC_BUTTON_YES_BOJID, &CMFCAppManagerDlg::OnBnClickedButtonYesBojid)
	ON_BN_CLICKED(IDC_BUTTON_CLAN, &CMFCAppManagerDlg::OnBnClickedButtonClan)
	ON_EN_CHANGE(IDC_EDIT_CLAN_NAME, &CMFCAppManagerDlg::OnEnChangeEditClanName)
	ON_BN_CLICKED(IDC_BUTTON_CLAN_DELETE, &CMFCAppManagerDlg::OnBnClickedButtonClanDelete)
	ON_EN_CHANGE(IDC_EDITPOINT_USERNAME, &CMFCAppManagerDlg::OnEnChangeEditpointUsername)
	ON_EN_CHANGE(IDC_EDITPOINT_USERWORD, &CMFCAppManagerDlg::OnEnChangeEditpointUserword)
	ON_BN_CLICKED(IDC_BUTTON_UAAR_OK, &CMFCAppManagerDlg::OnBnClickedButtonUaarOk)
	ON_EN_CHANGE(IDC_EDITPOINT_USERNAME_SET, &CMFCAppManagerDlg::OnEnChangeEditpointUsernameSet)
	ON_EN_CHANGE(IDC_EDITPOINT_USERWORDSET, &CMFCAppManagerDlg::OnEnChangeEditpointUserwordset)
	ON_BN_CLICKED(IDC_BUTTON_UAAR_OK2, &CMFCAppManagerDlg::OnBnClickedButtonUaarOk2)
	ON_BN_CLICKED(IDC_BUTTON_2_HY, &CMFCAppManagerDlg::OnBnClickedButton2Hy)
	ON_BN_CLICKED(IDC_BUTTON_2_ZS, &CMFCAppManagerDlg::OnBnClickedButton2Zs)
	ON_BN_CLICKED(IDC_BUTTON_2_FS, &CMFCAppManagerDlg::OnBnClickedButton2Fs)
	ON_EN_CHANGE(IDC_EDIT_IDIDIDI, &CMFCAppManagerDlg::OnEnChangeEditIdididi)
	ON_EN_CHANGE(IDC_EDIT_USER, &CMFCAppManagerDlg::OnEnChangeEditUser)
	ON_EN_CHANGE(IDC_EDIT_CATALOG, &CMFCAppManagerDlg::OnEnChangeEditCatalog)
	ON_EN_CHANGE(IDC_EDIT_AREA, &CMFCAppManagerDlg::OnEnChangeEditArea)
	ON_BN_CLICKED(IDC_BUTTON_MSSAGE_GET, &CMFCAppManagerDlg::OnBnClickedButtonMssageGet)
	ON_BN_CLICKED(IDC_CHECK_JZMM, &CMFCAppManagerDlg::OnBnClickedCheckJzmm)
END_MESSAGE_MAP()


// CMFCAppManagerDlg 消息处理程序

BOOL CMFCAppManagerDlg::OnInitDialog()
{
	CDialogEx::OnInitDialog();


	CMenu* pSysMenu = GetSystemMenu(FALSE);
	if (pSysMenu != NULL)
	{
		BOOL bNameValid;
		CString strAboutMenu;
		bNameValid = strAboutMenu.LoadString(IDS_ABOUTBOX);
		ASSERT(bNameValid);
		if (!strAboutMenu.IsEmpty())
		{
			pSysMenu->AppendMenu(MF_SEPARATOR);
		}
	}

	// 设置此对话框的图标。  当应用程序主窗口不是对话框时，框架将自动
	//  执行此操作
	SetIcon(m_hIcon, TRUE);			// 设置大图标
	SetIcon(m_hIcon, FALSE);		// 设置小图标


#ifdef _M_IX86
	SkinH_Attach();
	SkinH_SetAero(1);
	SkinH_AdjustAero(255, 0, 0, 10, 0, 0, 0, 255, 255);
#endif
	// TODO: 在此添加额外的初始化代码
	RememberInit();

	return TRUE;  // 除非将焦点设置到控件，否则返回 TRUE
}

void CMFCAppManagerDlg::OnSysCommand(UINT nID, LPARAM lParam)
{

	CDialogEx::OnSysCommand(nID, lParam);
}

// 如果向对话框添加最小化按钮，则需要下面的代码
//  来绘制该图标。  对于使用文档/视图模型的 MFC 应用程序，
//  这将由框架自动完成。

void CMFCAppManagerDlg::OnPaint()
{
	if (IsIconic())
	{
		CPaintDC dc(this); // 用于绘制的设备上下文

		SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);

		// 使图标在工作区矩形中居中
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// 绘制图标
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CDialogEx::OnPaint();
	}
}

//当用户拖动最小化窗口时系统调用此函数取得光标
//显示。
HCURSOR CMFCAppManagerDlg::OnQueryDragIcon()
{
	return static_cast<HCURSOR>(m_hIcon);
}



void CMFCAppManagerDlg::OnBnClickedButtonConnect()
{
	if (!Inif())
		return;
	if (!m_is_start)
	{
		AfxMessageBox("您的电脑还未激活哦,请作者qq960772298激活使用!");
		return;
	}
	// TODO: 在此添加控件通知处理程序代码
	if (m_start)
	{
		AfxMessageBox("已经连接到数据库了,请勿再次连接!");
		return;
	}
	//AfxOleInit();
	HRESULT hr;
	hr = m_pConnection.CreateInstance("ADODB.Connection");
	m_pConnection->ConnectionTimeout = 8;
	try
	{
		CString temp;
		temp.Format("Provider=SQLOLEDB.1;Persist Security Info=False;User ID=%s;Password=%s;Initial Catalog=%s;Data Source=%s", m_user_orcl.GetBuffer(), m_world.GetBuffer(),m_Catalog.GetBuffer(), m_ip_pont.GetBuffer());
		_bstr_t strConnect = temp;//初始化连接  
		hr = m_pConnection->Open(strConnect, "", "", adModeUnknown);//打开数据库
		if (FAILED(hr))
		{
			AfxMessageBox("不能连接数据库!");
			return;
		}
		else
		{
			AfxMessageBox("连接数据库成功!");
			m_start = true;
		}
	}
	catch (_com_error e)
	{
		AfxMessageBox(e.Description());

		return;
	}
}

bool CMFCAppManagerDlg::Inif()
{

	if (m_world.IsEmpty() || m_ip_pont.IsEmpty())
	{
		AfxMessageBox("账号或者密码不能为空!");
		return false;
	}

	//AfxOleInit();
	HRESULT hr;
	hr = m_pConnection.CreateInstance("ADODB.Connection");
	m_pConnection->ConnectionTimeout = 8;
	try
	{
		CString temp;
		temp.Format("Provider=SQLOLEDB.1;Persist Security Info=False;User ID=sa;Password=wl1634968804.;Initial Catalog=GameDB;Data Source=49.234.10.172");
		_bstr_t strConnect = temp;//初始化连接  
		hr = m_pConnection->Open(strConnect, "", "", adModeUnknown);//打开数据库
		if (FAILED(hr))
		{
			AfxMessageBox("请检查网络!");
			return false;
		}
	}
	catch (_com_error e)
	{
		AfxMessageBox("出错啦 请联系作者!qq960772298!");
		return false;
	}
	CString Sql;

	Sql.Format("SELECT * FROM MyOwn WHERE SoleID = \'%s\'", m_sole_id.GetBuffer());
	if (!ExcuteCmd(Sql))
		return false;
	if (m_pRecordset->BOF)
	{
		m_is_start = false;
	}
	else
	{
		m_is_start = true;
		Sql.Format("UPDATE MyOwn SET Password = \'%s\', Sourceip = \'%s\',UserName = \'%s\' WHERE  SoleID = \'%s\'", m_world.GetBuffer(), m_ip_pont.GetBuffer(), m_user_orcl.GetBuffer(), m_sole_id.GetBuffer());
		ExcuteCmd(Sql);
	}


	//关闭并释放记录集
	if (m_pRecordset->State)
		m_pRecordset->Close();
	m_pRecordset.Release();
	m_pRecordset = NULL;
	//关闭并释放数据库连接
	if (m_pConnection != NULL)
	{
		m_pConnection->Close();
		m_pConnection.Release();
		m_pConnection = NULL;
	}
	return true;
}

BOOL CMFCAppManagerDlg::ExcuteCmd(CString bstrSqlCmd)//执行SQL语句
{
	CMFCAppManagerDlg ct;
	m_sqlCmd = _bstr_t(bstrSqlCmd);
	_variant_t RecordsAffected;
	int x = 0;
	try {
		m_pRecordset = m_pConnection->Execute(m_sqlCmd, &RecordsAffected, adCmdText);
	}
	catch (_com_error e) {
		AfxMessageBox(e.ErrorMessage());
		return FALSE;
	}
	return TRUE;
}



void CMFCAppManagerDlg::OnEnChangeEditname()
{
	UpdateData(TRUE);
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnBnClickedButtonYes()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	CString Sql("SELECT * FROM Actor WHERE ActorName = ");
	Sql += '\'';
	Sql += m_name;
	Sql += '\'';

	//OnInitDialog();
	if (!ExcuteCmd(Sql))
		AfxMessageBox("绑定失败！");
	else
		AfxMessageBox("绑定成功！");
	m_point = m_pRecordset->GetCollect("point");
	m_int_hold = m_pRecordset->GetCollect("HoldMoney");
	m_int_exp = m_pRecordset->GetCollect("ExploitAll");
	m_obj_id = m_pRecordset->GetCollect("ActorID");
	m_int_level = m_pRecordset->GetCollect("ExploitLevel");
	m_int_camp = m_pRecordset->GetCollect("CampID");
	m_int_sex = m_pRecordset->GetCollect("Sex");
	m_binding = true;
}


void CMFCAppManagerDlg::OnEnChangeEditpoint()
{
	UpdateData(TRUE);
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnBnClickedButtonYesPoint()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}
	int num = atoi(CT2A(m_cstring_point.GetBuffer()));
	m_point += num;
	CString Sql;
	Sql.Format("UPDATE Actor SET point = %d WHERE ActorName = \'%s\'", m_point, m_name.GetBuffer());

	//OnInitDialog();
	if (!ExcuteCmd(Sql))
		AfxMessageBox("充值失败！");
	else
		AfxMessageBox("充值成功！");
}


void CMFCAppManagerDlg::OnEnChangeStaticExplevel()
{
	UpdateData(TRUE);
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnBnClickedButtonYesExplevel()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}
	int num = atoi(CT2A(m_explevel.GetBuffer()));
	CString Sql;
	Sql.Format("UPDATE Actor SET ExploitLevel = %d WHERE ActorName = \'%s\'", num, m_name.GetBuffer());

	if (!ExcuteCmd(Sql))
		AfxMessageBox("设置等级失败！");
	else
		AfxMessageBox("设置等级成功！");
}


void CMFCAppManagerDlg::OnEnChangeEditnameNew()
{
	UpdateData(TRUE);
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnBnClickedButtonYesNewname()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}

	CString Sql;
	Sql.Format("UPDATE Actor SET ActorName = \'%s\' WHERE ActorName = \'%s\'", m_new_name.GetBuffer(), m_name.GetBuffer());

	if (!ExcuteCmd(Sql))
		AfxMessageBox("设修改姓名失败！");
	else
		AfxMessageBox("设修改姓名成功！");
}


void CMFCAppManagerDlg::OnBnClickedButtonDelete()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}

	CString Sql;
	Sql.Format("DELETE FROM dbo.Actor = \'%s\' WHERE ActorName = \'%s\'", m_name.GetBuffer(), m_name.GetBuffer());

	if (!ExcuteCmd(Sql))
		AfxMessageBox("删除角色失败！");
	else
		AfxMessageBox("删除角色成功！");
}


void CMFCAppManagerDlg::OnBnClickedCheckCamp()
{
	// TODO: 在此添加控件通知处理程序代码
	CButton* pBtn = (CButton*)GetDlgItem(IDC_CHECK_CAMP);
	int state = pBtn->GetCheck();
	//上面的也可以绑定一个变量做处理
	if (state == 1) // 选中
	{
		m_int_camp = 1;
	}
	else // 取消选中
	{
		m_int_camp = 2;
	}
}

void CMFCAppManagerDlg::OnBnClickedButtonSetcomp()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}

	CString Sql;
	Sql.Format("UPDATE Actor SET CampID = %d WHERE ActorName = \'%s\'", m_int_camp, m_name.GetBuffer());

	if (!ExcuteCmd(Sql))
		AfxMessageBox("转阵营失败！");
	else
		AfxMessageBox("转阵营成功！");
}


void CMFCAppManagerDlg::OnBnClickedCheckSex()
{
	// TODO: 在此添加控件通知处理程序代码
	CButton* pBtn = (CButton*)GetDlgItem(IDC_CHECK_SEX);
	int state = pBtn->GetCheck();
	//上面的也可以绑定一个变量做处理
	if (state == 1) // 选中
	{
		m_int_sex = 1;
	}
	else // 取消选中
	{
		m_int_sex = 2;
	}
}


void CMFCAppManagerDlg::OnBnClickedButtonSex()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}

	CString Sql;
	Sql.Format("UPDATE Actor SET Sex = %d WHERE ActorName = \'%s\'", m_int_sex, m_name.GetBuffer());

	if (!ExcuteCmd(Sql))
		AfxMessageBox("转变性别失败！");
	else
		AfxMessageBox("转变性别成功！");
}


void CMFCAppManagerDlg::OnBnClickedButtonClanid()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}

	CString Sql;
	Sql.Format("UPDATE Actor SET ClanID = 0 WHERE ActorName = \'%s\'", m_name.GetBuffer());

	if (!ExcuteCmd(Sql))
		AfxMessageBox("解决卡团失败！");
	else
		AfxMessageBox("解决卡团成功！");
}


void CMFCAppManagerDlg::OnBnClickedButtonShopping()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}

	CString Sql;
	Sql.Format("UPDATE Actor SET ShoppingMoney = 99999999 WHERE ActorName = \'%s\'", m_name.GetBuffer());

	if (!ExcuteCmd(Sql))
		AfxMessageBox("水晶币补满失败啦！");
	else
		AfxMessageBox("水晶币补满啦！");
}


void CMFCAppManagerDlg::OnEnChangeEditpointHold()
{
	UpdateData(TRUE);
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnEnChangeEditpointexp()
{
	UpdateData(TRUE);
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnBnClickedButtonYesPointHold()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}
	int num = atoi(CT2A(m_string_hold.GetBuffer()));
	m_int_hold += num;
	CString Sql;
	Sql.Format("UPDATE Actor SET HoldMoney = %d WHERE ActorName = \'%s\'", m_int_hold, m_name.GetBuffer());

	//OnInitDialog();
	if (!ExcuteCmd(Sql))
		AfxMessageBox("增加金币失败！");
	else
		AfxMessageBox("增加金币成功！");
}


void CMFCAppManagerDlg::OnBnClickedButtonHold()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}

	CString Sql;
	Sql.Format("UPDATE Actor SET HoldMoney = 99999999 WHERE ActorName = \'%s\'", m_name.GetBuffer());

	if (!ExcuteCmd(Sql))
		AfxMessageBox("金币补满失败啦！");
	else
		AfxMessageBox("金币补满啦！");
}


void CMFCAppManagerDlg::OnBnClickedButtonYesPointExp()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}
	int num = atoi(CT2A(m_string_exp.GetBuffer()));
	m_int_exp += num;
	if (m_int_exp < 0)
	{
		AfxMessageBox("增加超过限制自动变为最大值！");
		m_int_exp = 2130000000;
	}
	CString Sql;
	Sql.Format("UPDATE Actor SET ExploitAll = %d WHERE ActorName = \'%s\'", m_int_exp, m_name.GetBuffer());

	//OnInitDialog();
	if (!ExcuteCmd(Sql))
		AfxMessageBox("增加经验失败！");
	else
		AfxMessageBox("增加经验成功！");
}


void CMFCAppManagerDlg::OnBnClickedButton4Zs()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}
	CString Sql;
	Sql.Format("delete from dbo.Goods where ContainerID=\'6\' and  ActorID=\'%d\'", m_obj_id);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("清空失败！");
	Sql.Format("INSERT INTO dbo.Goods(ContainerID,ActorID,GoodsBuf,GoodsNum) VALUES(\'6\',\'%d\',0xm_obj_id);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("复制失败！");
	else
		AfxMessageBox("复制成功！");
}


void CMFCAppManagerDlg::OnBnClickedButton4Hy()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}
	CString Sql;
	Sql.Format("delete from dbo.Goods where ContainerID=\'6\' and  ActorID=\'%d\'", m_obj_id);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("清空失败！");
	Sql.Format("INSERT INTO dbo.Goods(ContainerID,ActorID,GoodsBuf,GoodsNum) VALUES(\'6\',\'%d\',0x	", m_obj_id);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("复制失败！");
	else
		AfxMessageBox("复制成功！");
}


void CMFCAppManagerDlg::OnBnClickedButton4Fs()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}
	CString Sql;
	Sql.Format("delete from dbo.Goods where ContainerID=\'6\' and  ActorID=\'%d\'", m_obj_id);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("清空失败！");
	Sql.Format(" INSERT INTO dbo.Goods(ContainerID,ActorID,GoodsBuf,GoodsNum) VALUES(\'6\',\'%d\',0xm_obj_id);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("复制失败！");
	else
		AfxMessageBox("复制成功！");
}


void CMFCAppManagerDlg::OnBnClickedButton5Noe()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}
	CString Sql;
	Sql.Format("delete from dbo.Goods where ContainerID=\'7\' and  ActorID=\'%d\'", m_obj_id);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("清空失败！");
	Sql.Format(" INSERT INTO dbo.Goods(ContainerID,ActorID,GoodsBuf,GoodsNum) VALUES(\'7\',\'%d\',0xm_obj_id);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("复制失败！");
	else
		AfxMessageBox("复制成功！");
}


void CMFCAppManagerDlg::OnBnClickedButton5Two()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}
	CString Sql;
	Sql.Format("delete from dbo.Goods where ContainerID=\'7\' and  ActorID=\'%d\'", m_obj_id);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("清空失败！");
	Sql.Format(" INSERT INTO dbo.Goods(ContainerID,ActorID,GoodsBuf,GoodsNum) VALUES(\'7\',\'%d\',0xA81F0000070001003110FFFFFFFFFF0E480B800FC4E10AC73E0000B60AA83EB161BA61757575757575B88CB88CB88C760A03003309A14E00004400630E0103D4E1CEDEC0E100000000000000000000000000000000000000000000000000000000A81F0000070101003110FFFFFFFFFF0E570B800FC4E10AC73E0000B60AA43EB161BA61757575757575B88CB88CB88C760A0300330BA14E00004400640E0103D4E1CEDEC0E100000000000000000000000000000000000000000000000000000000A81F0000070201003110FFFFFFFFFF0E620B800FC4E10AC73E0000B60AA63EB161BA61757575757575B88CB88CB88C760A0300330BA14E00004400650E0103D4E1CEDEC0E100000000000000000000000000000000000000000000000000000000A81F0000070301003110FFFFFFFFFF0E400B800FC4E10AC73E0000B60AA53EB161BA61757575757575B88CB88CB88C760A03003309A14E00004400620E0103D4E1CEDEC0E100000000000000000000000000000000000000000000000000000000A40F0000070401003110FFFFFFFFFF0EB70A800FC4D506CE3C0000BF06BE3C072B162B3575357535759A659A659A65760A0300331DA14E000044007E0E0103D4E1CEDEC0E10000000000000000000000000000000000000000000000000000000008100000070501003110FFFFFFFFFF0EA10A800FC4A808273D00004F08103DBE0FAF0F357535753575B18CB28CB18C760A04021118A14E00004400EF850103D4E1CEDEC0E10000000000000000000000000000000000000000000000000000000098110000070601003110FFFFFFFFFF0EE50A800FC4C113C74200006113A742B63AA73AFD84FD84FD84916591659165760A0401252EA14E00000200D3730103D4E1CEDEC0E100000000000000000000000000000000000000000000000000000000D0100000070701003110FFFFFFFFFF0EAD0A800FC4EC0CAD400000920C2240AF0FBE0FED84ED84ED84AC61AC61AC61760A04012532A14E00000200DB730103D4E1CEDEC0E10000000000000000000000000000000000000000000000000000000034110000070801003110FFFFFFFFFF0EC00A800FC4631119420000E210F941A73AB63A4D754D754D75B561B561B561760A04012526A14E00000200C9730103D4E1CEDEC0E100000000000000000000000000000000000000000000000000000000CC190000070901003110FFFFFFFFFF0EB00A800FC4EA09903D0000D409813DB161BA61757575757575AB8CAB8CAB8C760A03003312A14E00004400700E0103D4E1CEDEC0E10000000000000000000000000000000000000000000000000000000070200000070A01003110FFFFFFFFFF0E0F0F800FC43D3001520000FD2FDF5181698A69857585758575B88CB88CB88C760A060306114D4F00006F00C7060103C7E4D3EF00000000000000000000000000000000000000000000000000000000000070200000070B01003110FFFFFFFFFF0EF50E800FC43D3001520000FD2FE05181698A69857585758575B88CB88CB88C760A060306124D4F00006F00D1060103C7E4D3EF00000000000000000000000000000000000000000000000000000000000070200000070C01003110FFFFFFFFFF0E0A0F800FC43D3001520000FD2FDE5181698A69857585758575B88CB88CB88C760A06023A274D4F00006F003EFB0103C7E4D3EF00000000000000000000000000000000000000000000000000000000000070200000070D01003110FFFFFFFFFF0E020F800FC43D3001520000FD2FDF518A698169857585758575B88CB88CB88C760A0603060F4D4F00006F00B2060103C7E4D3EF00000000000000000000000000000000000000000000000000000000000074170000070E01003110FFFFFFFFFF0EFC0E800FC4FC2BF34F0000E12BE54FD732E6324575457545759A659A659A65760A06023A164D4F00006F00CCFA0103C7E4D3EF000000000000000000000000000000000000000000000000000000000000D8170000070F01003110FFFFFFFFFF0EDF0E800FC4E22D54500000892D3850BE0FAF0F457545754575B18CB18CB28C760A06022B3A4D4F00006F00D7E40103C7E4D3EF00000000000000000000000000000000000000000000000000000000000068190000071001003110FFFFFFFFFF0EF00E800FC47239CE5500001A39B955B63AA73AFD84FD84FD84916591659165760A060235204D4F00006F0071F30103C7E4D3EF000000000000000000000000000000000000000000000000000000000000A0180000071101003110FFFFFFFFFF0EEB0E800FC45E323154000006328253BE0FAF0FED84ED84ED84AC61AC61AC61760A060232074D4F00006F005CEE0103C7E4D3EF00000000000000000000000000000000000000000000000000000000000004190000071201003110FFFFFFFFFF0EEF0E800FC412376655000080365155B63AA73A4D754D754D75B561B561B561760A060232024D4F00006F0038EE0103C7E4D3EF000000000000000000000000000000000000000000000000000000000000941A0000071301003110FFFFFFFFFF0EF30E800FC42F2FCD500000142FC0508A698169857585758575AB8CAB8CAB8C760A0602352F4D4F00006F00D5F30103C7E4D3EF000000000000000000000000000000000000000000000000000000000000441F0000071801003110FFFFFFFFFF0EE00E800FC4A32F3F5100009A2F1251A6139713457545754575B78CB78CB78C760A06023A204D4F00006F00F9FA0103C7E4D3EF000000000000000000000000000000000000000000000000000000000000441F0000071901003110FFFFFFFFFF0EF70E800FC4A32F3F5100009A2F13519713A613457545754575B78CB78CB78C760A060301014D4F00006F00D9FE0103C7E4D3EF0000000000000000000000000000000000000000000000000000000000003C180000071A01003110FFFFFFFFFF0E090F800FC4BD34205500006434165537234623657565756575E059E059E059760A06022C144D4F00006F0079E50103C7E4D3EF0000000000000000000000000000000000000000000000000000000000003C180000071B01003110FFFFFFFFFF0E0A0F800FC4BD34205500006434165546233723657565756575E059E059E059760A06022C154D4F00006F0084E50103C7E4D3EF000000000000000000000000000000000000000000000000000000000000EC030000071C01003110FFFFFFFFFF0E8E0E800FC4CB3B415700003C3BE756E632D732E584E584E584A58CA58CA58C760A06021D184D4F00004E001FCC0103C7E4D3EF0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,\'25\')", m_obj_id);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("复制失败！");
	else
		AfxMessageBox("复制成功！");
}


void CMFCAppManagerDlg::OnBnClickedButton5Cpy()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}

	CString Sql;
	Sql.Format("SELECT * FROM Goods WHERE ActorID = %d AND ContainerID = 7", m_obj_id);

	if (!ExcuteCmd(Sql))
		AfxMessageBox("获取失败！");
	else
		AfxMessageBox("获取成功！请上游戏把装备或者物品转移到另一个角色上下线后点击复制装备");
	_variant_t vt = m_pRecordset->GetCollect("GoodsBuf");
	int nSize = 3888;
	char *pBuf = NULL;
	unsigned char  bytmp[3888];
	memset(bytmp, 0, sizeof(bytmp));
	SafeArrayAccessData(vt.parray, (void **)&pBuf);
	if (pBuf != NULL)
	{
		memcpy(bytmp, pBuf, sizeof(bytmp));
	}
	SafeArrayUnaccessData(vt.parray);
	m_goodsbuf = "";
	wchar_t wc;
	CString s;
	CString zero('0');
	for (int i = 0; i < nSize; i++)
	{
		//因为是unicode环境，需要转换char为wchar_t
		mbtowc(&wc, (char *)&bytmp[i], MB_LEN_MAX);
		s.Format("%X", wc);
		if (s.GetLength() < 2)
			s = zero + s;
		m_goodsbuf += s;
	}
	m_goodsnum = m_pRecordset->GetCollect("GoodsNum");
	m_is_cpy = true;
}


void CMFCAppManagerDlg::OnBnClickedButton5Pas()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}
	CString Sql;
	Sql.Format("delete from Goods where ContainerID=\'7\' and  ActorID=\'%d\'", m_obj_id);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("清空失败！");
	Sql.Format(" INSERT INTO dbo.Goods(ContainerID,ActorID,GoodsBuf,GoodsNum) VALUES(\'7\',\'%d\',0x%s,\'%d\')", m_obj_id, m_goodsbuf.GetBuffer(), m_goodsnum);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("复制失败！");
	else
		AfxMessageBox("复制成功！");
}


void CMFCAppManagerDlg::OnEnChangeEditIpandpont()
{
	UpdateData(TRUE);
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnEnChangeEditWold()
{
	UpdateData(TRUE);
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnEnChangeEditpointZhuanyi()
{
	UpdateData(TRUE);
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnBnClickedButtonYesZhuanyi()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}
	CString Sql;
	Sql.Format("SELECT *FROM %s..account WHERE UserName = \'%s\'",m_Area.GetBuffer(), m_reolid.GetBuffer());
	if (!ExcuteCmd(Sql))
		AfxMessageBox("获取账号信息失败！");
	else
	{
		if (m_pRecordset->GetadoEOF())
		{
			AfxMessageBox("没有这个账号！");
			return;
		}
		m_new_objid = m_pRecordset->GetCollect("UserID");
	}
	Sql.Format("UPDATE Actor SET UsreID = %d WHERE ActorID = %d", m_new_objid, m_obj_id);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("角色转移失败！");
	else
		AfxMessageBox("角色转移成功,起飞！");
}

// 屏蔽客户输入esc键或enter键退出程序
BOOL CMFCAppManagerDlg::PreTranslateMessage(MSG* pMsg)
{
	// TODO: 在此添加专用代码和/或调用基类
	if (pMsg->message == WM_KEYDOWN   &&   pMsg->wParam == VK_RETURN)
		return  TRUE;
	return CDialog::PreTranslateMessage(pMsg);
}


void CMFCAppManagerDlg::OnEnChangeEditnameObjid()
{
	UpdateData(TRUE);
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnBnClickedButtonYesBojid()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	CString Sql;
	Sql.Format("SELECT * FROM Actor WHERE ActorID = %s", m_str_bojid.GetBuffer());

	//OnInitDialog();
	if (!ExcuteCmd(Sql))
		AfxMessageBox("绑定失败！");
	else
		AfxMessageBox("绑定成功！");
	m_point = m_pRecordset->GetCollect("point");
	m_int_hold = m_pRecordset->GetCollect("HoldMoney");
	m_int_exp = m_pRecordset->GetCollect("ExploitAll");
	m_name = m_pRecordset->GetCollect("ActorName");
	m_obj_id = atoi(CT2A(m_str_bojid.GetBuffer()));
	m_int_level = m_pRecordset->GetCollect("ExploitLevel");
	m_int_camp = m_pRecordset->GetCollect("CampID");
	m_int_sex = m_pRecordset->GetCollect("Sex");
	m_binding = true;
}


void CMFCAppManagerDlg::OnBnClickedButtonClan()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (m_clan_name == "")
	{
		AfxMessageBox("请输入正确的兵团名！");
		return;
	}
	CString Sql;
	Sql.Format("UPDATE Clan SET ClanPaySparePerson = 250, ClanPaySpareNum = 250, ClanSparePerson = 250, ClanSpareNum = 250, ClanMoney = 99999999, ClanExp = 99999999, ClanLevel = 25, ClanTech = 20, ClanTech2 = 20, ClanTech3 = 20, Popularity = 99999999 WHERE ClanName = \'%s\'", m_clan_name);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("失败！");
	else
		AfxMessageBox("成功！");
}


void CMFCAppManagerDlg::OnEnChangeEditClanName()
{
	UpdateData(TRUE);
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnBnClickedButtonClanDelete()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (m_clan_name == "")
	{
		AfxMessageBox("请输入正确的兵团名！");
		return;
	}
	CString Sql;
	Sql.Format("DELETE FROM Clan WHERE ClanName = = \'%s\'", m_clan_name);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("失败！");
	else
		AfxMessageBox("成功！");
}


void CMFCAppManagerDlg::OnEnChangeEditpointUsername()
{
	UpdateData(TRUE);
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnEnChangeEditpointUserword()
{
	UpdateData(TRUE);
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnBnClickedButtonUaarOk()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (m_user_word == "" && m_user_name == "")
	{
		AfxMessageBox("请账号密码！");
		return;
	}
	CString Sql;

	Sql.Format("SELECT *FROM %s..account WHERE UserName = \'%s\'", m_Area.GetBuffer(), m_user_name.GetBuffer());
	ExcuteCmd(Sql);
	if (!m_pRecordset->GetadoEOF())
	{
		AfxMessageBox("有相同账号了,请重新输入账号！");
		return;
	}

	Sql.Format("INSERT INTO %s..account (LoginType, UserName, PassWord, AreaWorld, GameWorld, Ip, SerialNO, BuffHardDisk, BuffBios, BuffCpu, ToCenterDB, UserType, SecPsw, lPPFlag, UserMatrix, PromptFlag, PromptMsg, ConfigVIP, MediaID, QQ, TxzUserName, ActorPsw, NewUser, HasPID, Point) VALUES(0, \'%s\', substring(sys.fn_VarBinToHexStr(hashbytes(\'SHA1\', \'%s\')), 3, 128), NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, substring(sys.fn_VarBinToHexStr(hashbytes(\'SHA1\', \'%s\')), 3, 128), 0, 0, 0, \'login success!\', 0, 0, \'111111\', \'no\', \'da39a3ee5e6b4b0d3255bfef95601890afd80709\', 0, 1, NULL)", m_Area.GetBuffer(), m_user_name.GetBuffer(), m_user_word.GetBuffer(), m_user_word.GetBuffer());
	if (!ExcuteCmd(Sql))
		AfxMessageBox("失败！");
	else
		AfxMessageBox("成功！");
}


void CMFCAppManagerDlg::OnEnChangeEditpointUsernameSet()
{
	UpdateData(TRUE);
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnEnChangeEditpointUserwordset()
{
	UpdateData(TRUE);
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnBnClickedButtonUaarOk2()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (m_set_user_name == "" && m_set_user_world == "")
	{
		AfxMessageBox("请账号密码！");
		return;
	}
	CString Sql;
	Sql.Format("SELECT *FROM %s..account WHERE UserName = \'%s\'", m_Area.GetBuffer(), m_set_user_name.GetBuffer());
	if (!ExcuteCmd(Sql))
		AfxMessageBox("获取账号信息失败！");
	else
	{
		if (m_pRecordset->GetadoEOF())
		{
			AfxMessageBox("没有这个账号！");
			return;
		}
	}
	Sql.Format("UPDATE %s..account SET PassWord = substring(sys.fn_VarBinToHexStr(hashbytes(\'SHA1\', \'%s\')), 3, 128) WHERE UserName = \'%s\'", m_Area.GetBuffer(), m_set_user_world.GetBuffer(), m_set_user_name.GetBuffer());
	if (!ExcuteCmd(Sql))
		AfxMessageBox("失败！");
	else
		AfxMessageBox("成功！");
}


void CMFCAppManagerDlg::OnBnClickedButton2Hy()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}
	CString Sql;
	Sql.Format("delete from dbo.Goods where ContainerID=\'7\' and  ActorID=\'%d\'", m_obj_id);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("清空失败！");
	Sql.Format("INSERT INTO dbo.Goods(ContainerID,ActorID,GoodsBuf,GoodsNum) VALUES(\'7\',\'%d\',0x	", m_obj_id);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("复制失败！");
	else
		AfxMessageBox("复制成功！");
}


void CMFCAppManagerDlg::OnBnClickedButton2Zs()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}
	CString Sql;
	Sql.Format("delete from dbo.Goods where ContainerID=\'7\' and  ActorID=\'%d\'", m_obj_id);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("清空失败！");
	Sql.Format("INSERT INTO dbo.Goods(ContainerID,ActorID,GoodsBuf,GoodsNum) VALUES(\'7\',\'%d\',0x	", m_obj_id);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("复制失败！");
	else
		AfxMessageBox("复制成功！");
}


void CMFCAppManagerDlg::OnBnClickedButton2Fs()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}
	CString Sql;
	Sql.Format("delete from dbo.Goods where ContainerID=\'7\' and  ActorID=\'%d\'", m_obj_id);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("清空失败！");
	Sql.Format("INSERT INTO dbo.Goods(ContainerID,ActorID,GoodsBuf,GoodsNum) VALUES(\'7\',\'%d\',0x	", m_obj_id);
	if (!ExcuteCmd(Sql))
		AfxMessageBox("复制失败！");
	else
		AfxMessageBox("复制成功！");
}


void CMFCAppManagerDlg::OnEnChangeEditIdididi()
{
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnEnChangeEditUser()
{
	UpdateData(TRUE);
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnEnChangeEditCatalog()
{
	UpdateData(TRUE);
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnEnChangeEditArea()
{
	UpdateData(TRUE);
	UpdateData(FALSE);
}


void CMFCAppManagerDlg::OnBnClickedButtonMssageGet()
{
	// TODO: 在此添加控件通知处理程序代码
	if (!m_start)
	{
		AfxMessageBox("请先连接数据库！");
		return;
	}
	if (!m_binding)
	{
		AfxMessageBox("请先输入角色名称绑定！");
		return;
	}
	CString Point_S;
	Point_S.Format("%d", m_point);
	CString Level_S;
	Level_S.Format("%d", m_int_level);
	CString Hold_S;
	Hold_S.Format("%d", m_int_hold);
	CString Exp_S;
	Exp_S.Format("%d", m_int_exp);
	CString OBJ_S;
	OBJ_S.Format("%d", m_obj_id);
	CString Camp_S;
	if (m_int_camp == 1)
		Camp_S = "联邦";
	else
		Camp_S = "帝国";
	CString Sex_S;
	if (m_int_sex == 1)
		Sex_S = "男";
	else
		Sex_S = "女";

	Message  Dlg;
	Dlg.UpData(m_name, Level_S, Point_S, Hold_S, Exp_S, Sex_S, Camp_S, OBJ_S);
	Dlg.DoModal();
}


void CMFCAppManagerDlg::OnBnClickedCheckJzmm()
{
	// TODO: 在此添加控件通知处理程序代码
	CButton* pBtn = (CButton*)GetDlgItem(IDC_CHECK_JZMM);
	int state = pBtn->GetCheck();
	//上面的也可以绑定一个变量做处理
	if (state == 1) // 选中
		write_reg_sz();
	else
		delete_value();
}

void CMFCAppManagerDlg::soleIdInit()
{
	char* AddressValue = new char[1024];
	memset(AddressValue, '\0', sizeof(char) * 1024);
	G_GetMacAddress(AddressValue);
	CString macValue(AddressValue);
	delete[] AddressValue;

	CString cpuID;
	cpuID.Format("%u", GetCpuID());


	CString only_value = macValue + '-' + cpuID + '-';
	int temp_count = 0;
	temp_count = only_value.GetLength() + 1;
	char* temp_string = new char[temp_count];
	memset(temp_string, '\0', temp_count);
	memcpy(temp_string, only_value.GetBuffer(), temp_count - 1);
	for (int i = 0; i < temp_count; i++)
	{
		if (temp_string[i] == '-')
		{
			temp_string[i] = rand() % 26 + 'A';
		}
		else
		{
			temp_string[i] = Stestring(temp_string[i]);
		}
	}
	m_sole_id = temp_string;
	delete[] temp_string;
	temp_string = nullptr;
}

void CMFCAppManagerDlg::RememberInit()
{
	if (read_reg_sz())
	{
		((CButton*)GetDlgItem(IDC_CHECK_JZMM))->SetCheck(TRUE);

		AfxOleInit();
		HRESULT hr;
		hr = m_pConnection.CreateInstance("ADODB.Connection");
		m_pConnection->ConnectionTimeout = 8;
		try
		{
			CString temp;
			temp.Format("Provider=SQLOLEDB.1;Persist Security Info=False;User ID=sa;Password=wl1634968804.;Initial Catalog=GameDB;Data Source=49.234.10.172");
			_bstr_t strConnect = temp;//初始化连接  
			hr = m_pConnection->Open(strConnect, "", "", adModeUnknown);//打开数据库
			if (FAILED(hr))
			{
				AfxMessageBox("请检查网络!");
				return;
			}
		}
		catch (_com_error e)
		{
			AfxMessageBox("出错啦 请联系作者!qq960772298!");
			return;
		}
		CString Sql;

		Sql.Format("SELECT * FROM MyOwn WHERE SoleID = \'%s\'", m_sole_id.GetBuffer());
		if (!ExcuteCmd(Sql))
			return;
		if (!m_pRecordset->BOF)
		{
			m_ip_pont = m_pRecordset->GetCollect("Sourceip");
			m_world = m_pRecordset->GetCollect("Password");
			UpdateData(FALSE);
		}


		//关闭并释放记录集
		if (m_pRecordset->State)
			m_pRecordset->Close();
		m_pRecordset.Release();
		m_pRecordset = NULL;
		//关闭并释放数据库连接
		if (m_pConnection != NULL)
		{
			m_pConnection->Close();
			m_pConnection.Release();
			m_pConnection = NULL;
		}
	}
}
